// Generated by Dagger (https://dagger.dev).
package com.d121211070.filmku.data;

import android.app.Application;
import com.d121211070.filmku.data.apiInterfaces.GenresInterface;
import com.d121211070.filmku.data.apiInterfaces.PopularInterface;
import com.d121211070.filmku.data.apiInterfaces.SearchInterface;
import com.d121211070.filmku.data.apiInterfaces.TopRatedInterface;
import com.d121211070.filmku.data.apiInterfaces.TrendingInterface;
import com.d121211070.filmku.data.apiInterfaces.UpcomingInterface;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductRepository_Factory implements Factory<ProductRepository> {
  private final Provider<Application> contextProvider;

  private final Provider<TrendingInterface> trendingApiProvider;

  private final Provider<GenresInterface> genreApiProvider;

  private final Provider<SearchInterface> searchApiProvider;

  private final Provider<TopRatedInterface> topRatedApiProvider;

  private final Provider<UpcomingInterface> upcomingApiProvider;

  private final Provider<PopularInterface> popularApiProvider;

  public ProductRepository_Factory(Provider<Application> contextProvider,
      Provider<TrendingInterface> trendingApiProvider, Provider<GenresInterface> genreApiProvider,
      Provider<SearchInterface> searchApiProvider, Provider<TopRatedInterface> topRatedApiProvider,
      Provider<UpcomingInterface> upcomingApiProvider,
      Provider<PopularInterface> popularApiProvider) {
    this.contextProvider = contextProvider;
    this.trendingApiProvider = trendingApiProvider;
    this.genreApiProvider = genreApiProvider;
    this.searchApiProvider = searchApiProvider;
    this.topRatedApiProvider = topRatedApiProvider;
    this.upcomingApiProvider = upcomingApiProvider;
    this.popularApiProvider = popularApiProvider;
  }

  @Override
  public ProductRepository get() {
    return newInstance(contextProvider.get(), trendingApiProvider.get(), genreApiProvider.get(), searchApiProvider.get(), topRatedApiProvider.get(), upcomingApiProvider.get(), popularApiProvider.get());
  }

  public static ProductRepository_Factory create(Provider<Application> contextProvider,
      Provider<TrendingInterface> trendingApiProvider, Provider<GenresInterface> genreApiProvider,
      Provider<SearchInterface> searchApiProvider, Provider<TopRatedInterface> topRatedApiProvider,
      Provider<UpcomingInterface> upcomingApiProvider,
      Provider<PopularInterface> popularApiProvider) {
    return new ProductRepository_Factory(contextProvider, trendingApiProvider, genreApiProvider, searchApiProvider, topRatedApiProvider, upcomingApiProvider, popularApiProvider);
  }

  public static ProductRepository newInstance(Application context, TrendingInterface trendingApi,
      GenresInterface genreApi, SearchInterface searchApi, TopRatedInterface topRatedApi,
      UpcomingInterface upcomingApi, PopularInterface popularApi) {
    return new ProductRepository(context, trendingApi, genreApi, searchApi, topRatedApi, upcomingApi, popularApi);
  }
}
