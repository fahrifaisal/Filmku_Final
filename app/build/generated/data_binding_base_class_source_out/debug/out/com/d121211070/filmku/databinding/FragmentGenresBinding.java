// Generated by view binder compiler. Do not edit!
package com.d121211070.filmku.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.d121211070.filmku.R;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGenresBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final TextView noDataText;

  @NonNull
  public final ProgressBar progressId;

  @NonNull
  public final RecyclerView recycle;

  @NonNull
  public final TextView textView2;

  private FragmentGenresBinding(@NonNull ConstraintLayout rootView, @NonNull ChipGroup chipGroup,
      @NonNull HorizontalScrollView horizontalScrollView, @NonNull TextView noDataText,
      @NonNull ProgressBar progressId, @NonNull RecyclerView recycle, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.chipGroup = chipGroup;
    this.horizontalScrollView = horizontalScrollView;
    this.noDataText = noDataText;
    this.progressId = progressId;
    this.recycle = recycle;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGenresBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGenresBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_genres, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGenresBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chip_group;
      ChipGroup chipGroup = ViewBindings.findChildViewById(rootView, id);
      if (chipGroup == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.noDataText;
      TextView noDataText = ViewBindings.findChildViewById(rootView, id);
      if (noDataText == null) {
        break missingId;
      }

      id = R.id.progressId;
      ProgressBar progressId = ViewBindings.findChildViewById(rootView, id);
      if (progressId == null) {
        break missingId;
      }

      id = R.id.recycle;
      RecyclerView recycle = ViewBindings.findChildViewById(rootView, id);
      if (recycle == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new FragmentGenresBinding((ConstraintLayout) rootView, chipGroup, horizontalScrollView,
          noDataText, progressId, recycle, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
